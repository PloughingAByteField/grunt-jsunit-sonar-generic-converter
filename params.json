{"name":"Grunt-karma-sonar","tagline":"Grunt plugin for integrating karma and protractor reports with sonar","body":"# grunt-karma-sonar \r\n[![Build Status](https://travis-ci.org/mdasberg/grunt-karma-sonar.svg?branch=master)](https://travis-ci.org/mdasberg/grunt-karma-sonar) [![npm version](https://img.shields.io/node/v/grunt-karma-sonar.svg)](https://github.com/mdasberg/grunt-karma-sonar) [![dependency Status](https://img.shields.io/david/mdasberg/grunt-karma-sonar.svg)](https://david-dm.org/mdasberg/grunt-karma-sonar) [![devDependency Status](https://img.shields.io/david/dev/mdasberg/grunt-karma-sonar.svg)](https://david-dm.org/mdasberg/grunt-karma-sonar#info=devDependencies) [![npm downloads](https://img.shields.io/npm/dm/grunt-karma-sonar.svg?style=flat-square)](https://www.npmjs.com/package/grunt-karma-sonar)\r\n\r\n> Grunt plugin for integrating karma and protractor reports with sonar.\r\n\r\nCurrently the following frameworks are supported for both unit and integration testing: \r\n- jasmine / jasmine2 (the default)\r\n- cucumber\r\n\r\nTo enable integration test result and coverage in Sonar, you need to install the following plugin [sonar-javascript-integrationtests](https://github.com/nvnoorloos/sonar-javascript-integrationtests)\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.5`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-karma-sonar --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-karma-sonar');\r\n```\r\n\r\n## The \"karmaSonar\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `karmaSonar` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  karmaSonar: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.dynamicAnalysis\r\nType: `String`\r\nDefault: 'reuseReports'\r\n\r\nShould be the sonar.property dynamicAnalysis\r\n\r\n#### options.sourceEncoding\r\nType: `String`\r\nDefault: 'UTF-8'\r\n\r\nShould be the sonar.property sourceEncoding\r\n\r\n#### options.language\r\nType: `String`\r\nDefault: 'js'\r\n\r\nShould be the sonar.property language (Starting with SonarQube 4.2, multi-language projects are supported. To enable this, set the value to null)\r\n\r\n#### options.scmDisabled\r\nType: `String`\r\nDefault: 'true'\r\n\r\nShould be the sonar.property scmDisabled\r\n\r\n#### options.defaultOutputDir\r\nType: `String`\r\nDefault: '.tmp/sonar/'\r\n\r\nShould be the location where the karmaSonar plugin will put it's temporary files.\r\n\r\n#### options.excludedProperties\r\nType: `Array`\r\nDefault: []\r\n\r\nShould be a list of sonar properties to exclude\r\n\r\n#### options.instance.hostUrl\r\nType: `String`\r\nDefault: 'http://localhost:9000'\r\n\r\nShould be the sonar.property host.url\r\n\r\n#### options.instance.jdbcUrl\r\nType: `String`\r\nDefault: 'jdbc:h2:tcp://localhost:9092/sonar'\r\n\r\nShould be the sonar.property jdbc.url\r\n\r\n#### options.instance.jdbcUsername\r\nType: `String`\r\nDefault: 'sonar'\r\n\r\nShould be the sonar.property jdbc.username\r\n\r\n#### options.instance.jdbcPassword\r\nType: `String`\r\nDefault: 'sonar'\r\n\r\nShould be the sonar.property jdbc.password\r\n\r\n#### options.instance.login\r\nType: `String`\r\nDefault: 'admin'\r\n\r\nShould be the sonar.property login\r\n\r\n#### options.instance.password\r\nType: `String`\r\nDefault: 'admin'\r\n\r\nShould be the sonar.property password\r\n\r\n#### options.instance.runnerProperties\r\nType: `Object`\r\n\r\nShould be the list of key(`sonar key`) value pairs.\r\n\r\n```js\r\nrunnerProperties: {\r\n    'sonar.links.homepage': 'https://github.com/mdasberg/grunt-karma-sonar',\r\n    'sonar.branch': 'master'\r\n}\r\n```\r\n\r\n#### options.debug\r\nType: `Boolean`\r\nDefault: 'false'\r\n\r\nIf true sonar-runner debug logging will be turned on. \r\n\r\n#### project\r\nType: `Object`,\r\nMandatory: true\r\n\r\nShould be the project information for sonar\r\n\r\n#### project.key\r\nType: `String`\r\nMandatory: true`\r\n\r\nShould be the project key for sonar \r\n\r\n#### project.name\r\nType: `String`\r\nMandatory: true`\r\n\r\nShould be the project name for sonar\r\n \r\n#### project.version\r\nType: `String`\r\n \r\nShould be the project version for sonar \r\n\r\n#### paths\r\nType: `Array`\r\n \r\nShould be the paths that contain the code, tests and results\r\n\r\n#### paths[].cwd\r\nType: `String`\r\nDefault: '.'\r\n \r\nShould be the current working directory that contain the source, tests and results folders are located\r\n\r\n#### paths[].src\r\nType: `String`\r\n \r\nShould be the directory containing the sources within the cwd.\r\n\r\n#### paths[].test\r\nType: `String`\r\n \r\nShould be the directory containing the tests within the cwd.\r\n\r\n#### paths[].reports\r\nType: `Object`\r\n \r\nShould be the object containing the reports.\r\n\r\n#### paths[].reports.unit\r\nType: `String` or `Object` ie: {src: '...', framework: 'jasmine'} (Supported frameworks are: cucumber, jasmine/jasmine2(default))\r\n \r\nShould be the location of the karma-junit-reporter report within the cwd.\r\n\r\n#### paths[].reports.coverage\r\nType: `String`\r\n \r\nShould be the glob for the lcov.info files within the cwd.\r\n\r\n#### paths[].reports.itUnit\r\nType: `String` or `Object` ie: {src: '...', framework: 'jasmine'} (Supported frameworks are: cucumber, jasmine/jasmine2(default))\r\n\r\nShould be the location of the protractor report within the cwd.\r\n\r\n#### paths[].reports.itCoverage\r\nType: `String`\r\n \r\nShould be the glob for the integration test lcov.info files within the cwd.\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\n\r\n```js\r\ngrunt.initConfig({\r\n  karmaSonar: {\r\n    options: {\r\n    \r\n    },\r\n    your_target: {\r\n      project: {\r\n        key: 'grunt-sonar',\r\n        name: 'Grunt sonar plugin',\r\n        version: '0.2.13'\r\n      },\r\n      paths: [\r\n        {\r\n          cwd: '...', // the current working directory'\r\n          src: '...', // the source directory within the cwd\r\n          test: '...', // the test directory within the cwd\r\n          reports: {\r\n              unit: '../path/result.xml', // the result file within the cwd\r\n              coverage: '../path/**/lcov.info', // the glob for lcov files'\r\n              itCoverage: '../path/**/lcov.info' // the glob for integration lcov files'\r\n          }\r\n        },\r\n        {\r\n          cwd: '...', // the current working directory'\r\n          src: '...', // the source directory within the cwd\r\n          test: '...', // the test directory within the cwd\r\n          reports: {\r\n              unit: '../path/result.xml', // the result file within the cwd\r\n              coverage: '../path/**/lcov.info', // the glob for lcov files'\r\n              itCoverage: '../path/**/lcov.info' // the glob for integration lcov files'\r\n          }\r\n      ],\r\n      exclusions: []\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n#### Custom Options\r\nIn this example, custom options are used to do something else with whatever else. So if the `testing` file has the content `Testing` and the `123` file had the content `1 2 3`, the generated result in this case would be `Testing: 1 2 3 !!!`\r\n\r\n```js\r\ngrunt.initConfig({\r\n  karmaSonar: {\r\n    options: {\r\n      defaultOutputDir: '.tmp/sonar/custom_options/',\r\n      instance: {\r\n        hostUrl : 'http://localhost:20001',\r\n        jdbcUrl : 'jdbc:h2:tcp://localhost:20003/sonar',\r\n        login: 'admin',\r\n        password: 'admin'\r\n      }\r\n    },\r\n    your_target: {\r\n      project: {\r\n        key: 'grunt-sonar',\r\n        name: 'Grunt sonar plugin',\r\n        version: '0.2.13'\r\n      },\r\n      paths: [...],\r\n      exclusions: []\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nDeciding Where To Get Sonar-runner from\r\n-------------------------------\r\n\r\nBy default, this package will download sonar-runner from `https://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=org.codehaus.sonar.runner&a=sonar-runner-dist&v=LATEST&p=zip`, \r\nbut only when sonar-runner is not available on the path.\r\n\r\n##### Downloading from a custom URL\r\n\r\nIf for some reason sonatype is down, or the Great Firewall is blocking sonatype, you may need to use\r\na download mirror url. To set a mirror, set npm config property `sonarrunner_cdnurl`.\r\nDefault is ``.\r\n\r\n```shell\r\nnpm install grunt-karma-sonar --sonarrunner_cdnurl=http://some-mirror.org/path/to/downloads\r\n```\r\n\r\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\r\n\r\n```\r\nsonarrunner_cdnurl=http://some-mirror.org/path/to/downloads\r\n```\r\n\r\nAnother option is to use PATH variable `SONARRUNNER_CDNURL`.\r\n```shell\r\nSONARRUNNER_CDNURL=http://some-mirror.org/path/to/downloads npm install grunt-karma-sonar\r\n```\r\n\r\nNote: It will try to find `sonar-runner-dist.zip` in the cdn url.\r\n\r\n##### Downloading from a custom Dir\r\n\r\nIf for some reason sonatype is down, or the Great Firewall is blocking sonatype, you may need to use\r\na download mirror directory. To set a mirror, set npm config property `sonarrunner_cdndir`.\r\nDefault is ``.\r\n\r\n```shell\r\nnpm install grunt-karma-sonar --sonarrunner_cdndir=/some/path/downloads\r\n```\r\n\r\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\r\n\r\n```\r\nsonarrunner_cdndir=/some/path/downloads\r\n```\r\n\r\nAnother option is to use PATH variable `SONARRUNNER_CDNDIR`.\r\n```shell\r\nSONARRUNNER_CDNDIR=/some/path/downloads npm install grunt-karma-sonar\r\n```\r\n\r\nNote: It can be the case that there are multiple versions available at the download mirror. \r\nIf this is the case the latest version will be used.\r\n\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n_(Nothing yet)_\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}